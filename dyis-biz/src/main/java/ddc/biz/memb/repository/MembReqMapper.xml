<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ddc.biz.memb.repository.MembReqMapper">

	<!-- 조합가입신청 정보 조회 -->
	<select id="selectMembReqList" parameterType="Map" resultType="camelMap">
		/* membReqMapper.selectMembReqList */
		SELECT
			F_GET_PATTERN(BIZ_NO, 'BIZ') BIZ_NO
			, MEMB_NM
			, CEO_NM
			, F_GET_PATTERN(LAW_NO, 'CRP') LAW_NO
			, BUSS_ETC
			, INVEST_CNT
			, INVEST_AMT
			, FACE_AMT
			, ADDR_DIV
			, REQ_DT
			, PROC_STAT
			, PROC_DT
			, PROC_NM
			, PROC_CONT
			, PERS_NM
			, PERS_POS
			, EMP_CNT
			, ASSET_AMT
			, CAPI_AMT
			, YEAR_SALE_AMT
			, MAIN_PROD
			, BUSS_COND
			, BUSS_START_DT
			, BELONG
			, MAIN_BUSS_CD
			, SUB_BUSS_CDS
			, BILL_TYPE_NM
			, SMS_YN
			, EMAIL_YN
			, FAX_NO
			, HOMEPAGE
			, BUSS_ADDR_DIV
			, BUSS_POST_NO
			, BUSS_ADDR1
			, BUSS_ADDR2
			, (CASE WHEN BUSS_ADDR_DIV = 'JB' THEN BUSS_ADDR1 || ' ' || BUSS_ADDR2
					WHEN BUSS_ADDR_DIV = 'DR' THEN BUSS_DORO_NM||' '||BUSS_DORO_BUNHO||'('||BUSS_DORO_DONG||' '||BUSS_DORO_BD_NO||')' ||' '|| BUSS_DORO_DTL
					ELSE '' END) AS BUSS_ADDR_FULL_DORO
			, BUSS_DORO_CD
			, BUSS_DORO_NM
			, BUSS_DORO_BUNHO
			, BUSS_DORO_DONG
			, BUSS_DORO_DTL
			, BUSS_DORO_BD_NO
			, BUSS_TEL_NO
			, BUSS_FAX_NO
			, BUSS_HOMEPAGE
			, BUSS_EMAIL
			, CEO_HOMEPAGE
			, POST_GET_CD
			, KNOW_CDS
			, WEB_KEYWORD
			, REC_PERS
			, REC_COMP
			, ETC_CONT
			, BUSS_EVENT
			, SIGNED_CONTR_CONT
			, SIGNED_CONTR_DTM
			, ATTH_NO
			, MOD_REASON
		  FROM MB_REQ
		<where>
		<if test="sBizNo != null and sBizNo  != ''">
		AND BIZ_NO = REPLCAE(#{sBizNo}, '-')
		</if>
		<if test="sMembNm != null and sMembNm  != ''">
		AND MEMB_NM LIKE '%' || #{sMembNm} || '%'
		</if>
		<if test="sCeoNm != null and sCeoNm  != ''">
		AND CEO_NM LIKE '%' || #{sCeoNm} || '%'
		</if>
		<if test="sProcStat != null and sProcStat  != ''">
		AND PROC_STAT = #{sProcStat}
		</if>
		</where>
		ORDER BY REG_DTM DESC
	</select>

	<!-- 조합가입신청 상세 조회 -->
	<select id="selectMembReq" parameterType="Map" resultType="camelMap">
		/* membReqMapper.selectMembReq*/
		SELECT
			MEMB_NM
			, CEO_NM
			, F_GET_PATTERN(F_GET_CRYPT_DEC(CEO_SSN), 'CRP') CEO_SSN
			, F_GET_PATTERN(BIZ_NO, 'BIZ') BIZ_NO
			, F_GET_PATTERN(LAW_NO, 'CRP') LAW_NO
			, (CASE WHEN LAW_NO IS NOT NULL AND LENGTH(LAW_NO) = 13 THEN SUBSTR(LAW_NO, 0,6) ELSE '' END) LAW_NO1
			, (CASE WHEN LAW_NO IS NOT NULL AND LENGTH(LAW_NO) = 13 THEN SUBSTR(LAW_NO, 7,7) ELSE '' END) LAW_NO2
			, F_GET_CRYPT_DEC(TEL_NO) TEL_NO
			, F_GET_CRYPT_DEC(EMAIL) EMAIL
			, BUSS_ETC
			, INVEST_CNT
			, F_GET_PATTERN(INVEST_AMT, 'AMT') INVEST_AMT
			, F_GET_PATTERN(FACE_AMT, 'AMT') FACE_AMT
			, ADDR_DIV
			, POST_NO
			, ADDR1
			, ADDR2
			, DORO_CD
			, DORO_NM
			, DORO_BUNHO
			, DORO_DONG
			, DORO_DTL
			, DORO_BD_NO
			, (CASE WHEN ADDR_DIV = 'JB' THEN ADDR1 || ' ' || ADDR2
					WHEN ADDR_DIV = 'DR' THEN DORO_NM||' ('||DORO_DONG||' '||DORO_BD_NO||')' ||' '|| DORO_DTL
					ELSE '' END) AS ADDR_FULL_DORO
			, F_GET_PATTERN(REQ_DT, 'DT') REQ_DT
			, F_GET_CD_NM('MB03', PROC_STAT) PROC_STAT_NM
			, PROC_STAT
			, F_GET_PATTERN(PROC_DT, 'DT') PROC_DT
			, PROC_NM
			, PROC_CONT
			, F_GET_CRYPT_DEC(BANK_CD) BANK_CD
			, F_GET_CD_NM('CM02', F_GET_CRYPT_DEC(BANK_CD)) BANK_CD_NM
			, F_GET_CRYPT_DEC(ACCT_NO) ACCT_NO
			, F_GET_CRYPT_DEC(DEPO_NM) DEPO_NM
			, PERS_NM
			, PERS_POS
			, F_GET_CRYPT_DEC(PERS_CELL_NO) PERS_CELL_NO
			, EMP_CNT
			, F_GET_PATTERN(ASSET_AMT, 'AMT') ASSET_AMT
			, F_GET_PATTERN(CAPI_AMT, 'AMT') CAPI_AMT
			, F_GET_PATTERN(YEAR_SALE_AMT, 'AMT') YEAR_SALE_AMT
			, MAIN_PROD
			, BUSS_COND
			, F_GET_PATTERN(BUSS_START_DT, 'DT') BUSS_START_DT
			, BELONG
			, MAIN_BUSS_CD
			, F_GET_CD_NM('MB02', MAIN_BUSS_CD) MAIN_BUSS_CD_NM
			, SUB_BUSS_CDS
			, BILL_TYPE_NM
			, SMS_YN
			, DECODE(SMS_YN, 'Y', '수신', '미수신') SMS_YN_NM
			, EMAIL_YN
			, DECODE(EMAIL_YN, 'Y', '수신', '미수신') EMAIL_YN_NM
			, FAX_NO
			, HOMEPAGE
			, BUSS_ADDR_DIV
			, BUSS_POST_NO
			, BUSS_ADDR1
			, BUSS_ADDR2
			, BUSS_DORO_CD
			, BUSS_DORO_NM
			, BUSS_DORO_BUNHO
			, BUSS_DORO_DONG
			, BUSS_DORO_DTL
			, BUSS_DORO_BD_NO

			, (CASE WHEN BUSS_ADDR_DIV = 'JB' THEN BUSS_ADDR1 || ' ' || BUSS_ADDR2
					WHEN BUSS_ADDR_DIV = 'DR' THEN BUSS_DORO_NM||' '||BUSS_DORO_BUNHO||'('||BUSS_DORO_DONG||' '||BUSS_DORO_BD_NO||')' ||' '|| BUSS_DORO_DTL
					ELSE '' END) AS BUSS_ADDR_FULL_DORO

			, BUSS_TEL_NO
			, BUSS_FAX_NO
			, BUSS_HOMEPAGE
			, BUSS_EMAIL
			, CEO_ADDR_DIV
			, F_GET_CRYPT_DEC(CEO_POST_NO) CEO_POST_NO
			, F_GET_CRYPT_DEC(CEO_ADDR1) CEO_ADDR1
			, F_GET_CRYPT_DEC(CEO_ADDR2) CEO_ADDR2
			, F_GET_CRYPT_DEC(CEO_DORO_CD) CEO_DORO_CD
			, F_GET_CRYPT_DEC(CEO_DORO_NM) CEO_DORO_NM
			, F_GET_CRYPT_DEC(CEO_DORO_BUNHO) CEO_DORO_BUNHO
			, F_GET_CRYPT_DEC(CEO_DORO_DONG) CEO_DORO_DONG
			, F_GET_CRYPT_DEC(CEO_DORO_DTL) CEO_DORO_DTL
			, F_GET_CRYPT_DEC(CEO_DORO_BD_NO) CEO_DORO_BD_NO

			, (CASE WHEN CEO_ADDR_DIV = 'JB' THEN F_GET_CRYPT_DEC(CEO_ADDR1) || ' ' || F_GET_CRYPT_DEC(CEO_ADDR2)
					WHEN CEO_ADDR_DIV = 'DR' THEN F_GET_CRYPT_DEC(CEO_DORO_NM)||' '||F_GET_CRYPT_DEC(CEO_DORO_BUNHO)||'('||F_GET_CRYPT_DEC(CEO_DORO_DONG)||' '||F_GET_CRYPT_DEC(CEO_DORO_BD_NO)||')' ||' '|| F_GET_CRYPT_DEC(CEO_DORO_DTL)
					ELSE '' END) AS CEO_ADDR_FULL_DORO

			, F_GET_CRYPT_DEC(CEO_TEL_NO) CEO_TEL_NO
			, CEO_FAX_NO
			, CEO_HOMEPAGE
			, F_GET_CRYPT_DEC(CEO_EMAIL) CEO_EMAIL
			, F_GET_CRYPT_DEC(PERS_EMAIL) PERS_EMAIL
			, F_GET_CRYPT_DEC(CEO_CELL_NO) CEO_CELL_NO
			, POST_GET_CD
			, F_GET_CD_NM('MB23', POST_GET_CD) POST_GET_CD_NM
			, KNOW_CDS
			, WEB_KEYWORD
			, REC_PERS
			, REC_COMP
			, ETC_CONT
			, BUSS_EVENT
			, SIGNED_CONTR_CONT
			, SIGNED_CONTR_DTM
			, ATTH_NO
			, MOD_REASON
		  FROM MB_REQ
		  WHERE BIZ_NO = REPLACE(#{bizNo}, '-')
	</select>

	<!-- 조합가입신청 등록 처리 -->
	<insert id="insertMembReq" parameterType="Map"  >
		/* membReqMapper.insertMembReq */
		INSERT INTO MB_REQ (
			BIZ_NO
			, MEMB_NM
			, CEO_NM
			, CEO_SSN
			, LAW_NO
			, TEL_NO
			, EMAIL
			, BUSS_ETC
			, INVEST_CNT
			, INVEST_AMT
			, FACE_AMT
			, ADDR_DIV
			, POST_NO
			, ADDR1
			, ADDR2
			, DORO_CD
			, DORO_NM
			, DORO_BUNHO
			, DORO_DONG
			, DORO_DTL
			, DORO_BD_NO
			, REQ_DT
			, PROC_STAT
			, PROC_DT
			, PROC_NM
			, PROC_CONT
			, BANK_CD
			, ACCT_NO
			, DEPO_NM
			, PERS_NM
			, PERS_POS
			, PERS_CELL_NO
			, EMP_CNT
			, ASSET_AMT
			, CAPI_AMT
			, YEAR_SALE_AMT
			, MAIN_PROD
			, BUSS_COND
			, BUSS_START_DT
			, BELONG
			, MAIN_BUSS_CD
			, SUB_BUSS_CDS
			, BILL_TYPE_NM
			, SMS_YN
			, EMAIL_YN
			, FAX_NO
			, HOMEPAGE
			, BUSS_ADDR_DIV
			, BUSS_POST_NO
			, BUSS_ADDR1
			, BUSS_ADDR2
			, BUSS_DORO_CD
			, BUSS_DORO_NM
			, BUSS_DORO_BUNHO
			, BUSS_DORO_DONG
			, BUSS_DORO_DTL
			, BUSS_DORO_BD_NO
			, BUSS_TEL_NO
			, BUSS_FAX_NO
			, BUSS_HOMEPAGE
			, BUSS_EMAIL
			, CEO_ADDR_DIV
			, CEO_POST_NO
			, CEO_ADDR1
			, CEO_ADDR2
			, CEO_DORO_CD
			, CEO_DORO_NM
			, CEO_DORO_BUNHO
			, CEO_DORO_DONG
			, CEO_DORO_DTL
			, CEO_DORO_BD_NO
			, CEO_TEL_NO
			, CEO_FAX_NO
			, CEO_HOMEPAGE
			, CEO_EMAIL
			, PERS_EMAIL
			, CEO_CELL_NO
			, POST_GET_CD
			, REG_DTM
			, REG_NM
			, MOD_DTM
			, MOD_NM
			, KNOW_CDS
			, WEB_KEYWORD
			, REC_PERS
			, REC_COMP
			, ETC_CONT
			, BUSS_EVENT
			, SIGNED_CONTR_CONT
			, SIGNED_CONTR_DTM
			, ATTH_NO
			, MOD_REASON
		) VALUES (
			REPLACE(#{bizNo}, '-', '')
			, #{membNm}
			, #{ceoNm}
			, F_GET_CRYPT_ENC(REPLACE(#{ceoSsn}, '-', ''))
			, #{lawNo}
			, F_GET_CRYPT_ENC(#{telNo})
			, F_GET_CRYPT_ENC(#{email})
			, #{bussEtc}
			, #{investCnt}
			, REPLACE(#{investAmt}, ',')
			, REPLACE(#{faceAmt}, ',')
			, #{addrDiv}
			, #{postNo}
			, #{addr1}
			, #{addr2}
			, #{doroCd}
			, #{doroNm}
			, #{doroBunho}
			, #{doroDong}
			, #{doroDtl}
			, #{doroBdNo}
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, NVL(#{procStat}, '11')
			, REPLACE(#{procDt}, '-')
			, #{procNm}
			, #{procCont}
			, F_GET_CRYPT_ENC(#{bankCd})
			, F_GET_CRYPT_ENC(#{acctNo})
			, F_GET_CRYPT_ENC(#{depoNm})
			, #{persNm}
			, #{persPos}
			, F_GET_CRYPT_ENC(#{persCellNo})
			, REPLACE(#{empCnt}, ',')
			, REPLACE(#{assetAmt}, ',')
			, REPLACE(#{capiAmt}, ',')
			, REPLACE(#{yearSaleAmt}, ',')
			, #{mainProd}
			, #{bussCond}
			, REPLACE(#{bussStartDt}, '-')
			, #{belong}
			, #{mainBussCd}
			, #{subBussCds}
			, #{billTypeNm}
			, #{smsYn}
			, #{emailYn}
			, #{faxNo}
			, #{homepage}
			, #{bussAddrDiv}
			, #{bussPostNo}
			, #{bussAddr1}
			, #{bussAddr2}
			, #{bussDoroCd}
			, #{bussDoroNm}
			, #{bussDoroBunho}
			, #{bussDoroDong}
			, #{bussDoroDtl}
			, #{bussDoroBdNo}
			, #{bussTelNo}
			, #{bussFaxNo}
			, #{bussHomepage}
			, #{bussEmail}
			, #{ceoAddrDiv}
			, F_GET_CRYPT_ENC(#{ceoPostNo})
			, F_GET_CRYPT_ENC(#{ceoAddr1})
			, F_GET_CRYPT_ENC(#{ceoAddr2})
			, F_GET_CRYPT_ENC(#{ceoDoroCd})
			, F_GET_CRYPT_ENC(#{ceoDoroNm})
			, F_GET_CRYPT_ENC(#{ceoDoroBunho})
			, F_GET_CRYPT_ENC(#{ceoDoroDong})
			, F_GET_CRYPT_ENC(#{ceoDoroDtl})
			, F_GET_CRYPT_ENC(#{ceoDoroBdNo})
			, F_GET_CRYPT_ENC(#{ceoTelNo})
			, #{ceoFaxNo}
			, #{ceoHomepage}
			, F_GET_CRYPT_ENC(#{ceoEmail})
			, F_GET_CRYPT_ENC(#{persEmail})
			, F_GET_CRYPT_ENC(#{ceoCellNo})
			, #{postGetCd}
			, SYSDATE
			, #{userNm}
			, SYSDATE
			, #{userNm}
			, #{knowCds}
			, #{webKeyword}
			, #{recPers}
			, #{recComp}
			, #{etcCont}
			, #{bussEvent}
			, #{signedContrCont}
			, SYSDATE
			, #{atthNo}
			, #{modReason}
		)
	</insert>

	<!-- 조합가입신청 수정 처리 -->
	<update id="updateMembReq" parameterType="Map"  >
		/* membReqMapper.updateMembReq */
		UPDATE MB_REQ
		SET
			MEMB_NM 		= #{membNm}
			, CEO_NM 		= #{ceoNm}
			, CEO_SSN 		= F_GET_CRYPT_ENC(REPLACE(#{ceoSsn}, '-', ''))
			, LAW_NO 		= REPLACE(#{lawNo}, '-')
			, TEL_NO 		= F_GET_CRYPT_ENC(#{telNo})
			, EMAIL 		= F_GET_CRYPT_ENC(#{email})
			, BUSS_ETC 		= #{bussEtc}
			, INVEST_CNT 	= #{investCnt}
			, INVEST_AMT 	= REPLACE(#{investAmt}, ',')
			, FACE_AMT 		= REPLACE(#{faceAmt}, ',')
			, ADDR_DIV 		= #{addrDiv}
			, POST_NO 		= #{postNo}
			, ADDR1 		= #{addr1}
			, ADDR2 		= #{addr2}
			, DORO_CD 		= #{doroCd}
			, DORO_NM 		= #{doroNm}
			, DORO_BUNHO 	= #{doroBunho}
			, DORO_DONG 	= #{doroDong}
			, DORO_DTL 		= #{doroDtl}
			, DORO_BD_NO 	= #{doroBdNo}
			, REQ_DT 		= REPLACE(#{reqDt}, '-')
			, PROC_STAT 	= #{procStat}
			, PROC_DT 		= REPLACE(#{procDt}, '-')
			, PROC_NM 		= #{procNm}
			, PROC_CONT 	= #{procCont}
			, BANK_CD 		= F_GET_CRYPT_ENC(#{bankCd})
			, ACCT_NO 		= F_GET_CRYPT_ENC(#{acctNo})
			, DEPO_NM 		= F_GET_CRYPT_ENC(#{depoNm})
			, PERS_NM 		= #{persNm}
			, PERS_POS 		= #{persPos}
			, PERS_CELL_NO 	= F_GET_CRYPT_ENC(#{persCellNo})
			, EMP_CNT 		= REPLACE(#{empCnt}, ',')
			, ASSET_AMT 	= REPLACE(#{assetAmt}, ',')
			, CAPI_AMT 		= REPLACE(#{capiAmt}, ',')
			, YEAR_SALE_AMT = REPLACE(#{yearSaleAmt}, ',')
			, MAIN_PROD 	= #{mainProd}
			, BUSS_COND 	= #{bussCond}
			, BUSS_START_DT = REPLACE(#{bussStartDt}, '-')
			, BELONG 		= #{belong}
			, MAIN_BUSS_CD 	= #{mainBussCd}
			, SUB_BUSS_CDS 	= #{subBussCds}
			, BILL_TYPE_NM 	= #{billTypeNm}
			, SMS_YN 		= #{smsYn}
			, EMAIL_YN 		= #{emailYn}
			, FAX_NO 		= #{faxNo}
			, HOMEPAGE 		= #{homepage}
			, BUSS_ADDR_DIV = #{bussAddrDiv}
			, BUSS_POST_NO 	= #{bussPostNo}
			, BUSS_ADDR1 	= #{bussAddr1}
			, BUSS_ADDR2 	= #{bussAddr2}
			, BUSS_DORO_CD 	= #{bussDoroCd}
			, BUSS_DORO_NM 	= #{bussDoroNm}
			, BUSS_DORO_BUNHO = #{bussDoroBunho}
			, BUSS_DORO_DONG = #{bussDoroDong}
			, BUSS_DORO_DTL = #{bussDoroDtl}
			, BUSS_DORO_BD_NO = #{bussDoroBdNo}
			, BUSS_TEL_NO 	= #{bussTelNo}
			, BUSS_FAX_NO 	= #{bussFaxNo}
			, BUSS_HOMEPAGE = #{bussHomepage}
			, BUSS_EMAIL 	= #{bussEmail}
			, CEO_ADDR_DIV 	= #{ceoAddrDiv}
			, CEO_POST_NO 	= F_GET_CRYPT_ENC(#{ceoPostNo})
			, CEO_ADDR1 	= F_GET_CRYPT_ENC(#{ceoAddr1})
			, CEO_ADDR2 	= F_GET_CRYPT_ENC(#{ceoAddr2})
			, CEO_DORO_CD 	= F_GET_CRYPT_ENC(#{ceoDoroCd})
			, CEO_DORO_NM 	= F_GET_CRYPT_ENC(#{ceoDoroNm})
			, CEO_DORO_BUNHO = F_GET_CRYPT_ENC(#{ceoDoroBunho})
			, CEO_DORO_DONG = F_GET_CRYPT_ENC(#{ceoDoroDong})
			, CEO_DORO_DTL 	= F_GET_CRYPT_ENC(#{ceoDoroDtl})
			, CEO_DORO_BD_NO =F_GET_CRYPT_ENC(#{ceoDoroBdNo})
			, CEO_TEL_NO	= F_GET_CRYPT_ENC(#{ceoTelNo})
			, CEO_FAX_NO 	= #{ceoFaxNo}
			, CEO_HOMEPAGE 	= #{ceoHomepage}
			, CEO_EMAIL 	= F_GET_CRYPT_ENC(#{ceoEmail})
			, PERS_EMAIL 	= F_GET_CRYPT_ENC(#{persEmail})
			, CEO_CELL_NO 	= F_GET_CRYPT_ENC(#{ceoCellNo})
			, POST_GET_CD 	= #{postGetCd}
			, MOD_DTM 		= SYSDATE
			, MOD_NM		= #{userNm}
			, KNOW_CDS 		= #{knowCds}
			, WEB_KEYWORD 	= #{webKeyword}
			, REC_PERS 		= #{recPers}
			, REC_COMP 		= #{recComp}
			, ETC_CONT 		= #{etcCont}
			, BUSS_EVENT 	= #{bussEvent}
			, MOD_REASON 	= #{modReason}
		WHERE BIZ_NO 		= REPLACE(#{bizNo}, '-')
	</update>

	<!-- 조합가입신청 삭제 처리 -->
	<delete id="deleteMembReq" parameterType="Map"  >
		/* membReqMapper.deleteMembReq */
		DELETE FROM MB_REQ
		WHERE BIZ_NO = #{bizNo}
	</delete>

	<!-- 조합가입신청 등록 이력 처리 -->
	<insert id="insertMembReqHist" parameterType="Map"  >
		/* membReqMapper.insertMembReqHist */
		INSERT INTO MB_REQ_HIST (
			BIZ_NO
			, HIST_SEQ
			, HIST_REG_DTM		, HIST_REG_NM		, HIST_REASON
			, MEMB_NM 			, CEO_NM			, CEO_SSN			, LAW_NO			, TEL_NO
			, EMAIL				, BUSS_ETC			, INVEST_CNT		, INVEST_AMT		, FACE_AMT
			, ADDR_DIV 			, POST_NO			, ADDR1				, ADDR2				, DORO_CD
			, DORO_NM 			, DORO_BUNHO		, DORO_DONG			, DORO_DTL			, DORO_BD_NO
			, REQ_DT 			, PROC_STAT			, PROC_DT			, PROC_NM			, PROC_CONT
			, BANK_CD 			, ACCT_NO			, DEPO_NM			, PERS_NM			, PERS_POS
			, PERS_CELL_NO 		, EMP_CNT			, ASSET_AMT			, CAPI_AMT			, YEAR_SALE_AMT
			, MAIN_PROD 		, BUSS_COND			, BUSS_START_DT		, BELONG			, MAIN_BUSS_CD
			, SUB_BUSS_CDS 		, BILL_TYPE_NM		, SMS_YN			, EMAIL_YN			, FAX_NO
			, HOMEPAGE 			, BUSS_ADDR_DIV		, BUSS_POST_NO		, BUSS_ADDR1		, BUSS_ADDR2
			, BUSS_DORO_CD 		, BUSS_DORO_NM		, BUSS_DORO_BUNHO	, BUSS_DORO_DONG	, BUSS_DORO_DTL
			, BUSS_DORO_BD_NO 	, BUSS_TEL_NO		, BUSS_FAX_NO		, BUSS_HOMEPAGE		, BUSS_EMAIL
			, CEO_ADDR_DIV 		, CEO_POST_NO		, CEO_ADDR1			, CEO_ADDR2			, CEO_DORO_CD
			, CEO_DORO_NM 		, CEO_DORO_BUNHO	, CEO_DORO_DONG		, CEO_DORO_DTL		, CEO_DORO_BD_NO
			, CEO_TEL_NO 		, CEO_FAX_NO		, CEO_HOMEPAGE		, CEO_EMAIL			, PERS_EMAIL
			, CEO_CELL_NO 		, POST_GET_CD		, REG_DTM			, REG_NM			, MOD_DTM
			, MOD_NM 			, KNOW_CDS			, WEB_KEYWORD		, REC_PERS			, REC_COMP
			, ETC_CONT 			, BUSS_EVENT		, SIGNED_CONTR_CONT	, SIGNED_CONTR_DTM	, ATTH_NO
			, MOD_REASON
		)
		(
		SELECT
			BIZ_NO
			, (SELECT NVL(MAX(HIST_SEQ), 0)+1 FROM MB_REQ_HIST WHERE BIZ_NO = A.BIZ_NO)
			, SYSDATE			, #{userNm}		    , #{histReason}
		    , MEMB_NM 			, CEO_NM			, CEO_SSN			, LAW_NO			, TEL_NO
			, EMAIL				, BUSS_ETC			, INVEST_CNT		, INVEST_AMT		, FACE_AMT
			, ADDR_DIV 			, POST_NO			, ADDR1				, ADDR2				, DORO_CD
			, DORO_NM 			, DORO_BUNHO		, DORO_DONG			, DORO_DTL			, DORO_BD_NO
			, REQ_DT 			, PROC_STAT			, PROC_DT			, PROC_NM			, PROC_CONT
			, BANK_CD 			, ACCT_NO			, DEPO_NM			, PERS_NM			, PERS_POS
			, PERS_CELL_NO 		, EMP_CNT			, ASSET_AMT			, CAPI_AMT			, YEAR_SALE_AMT
			, MAIN_PROD 		, BUSS_COND			, BUSS_START_DT		, BELONG			, MAIN_BUSS_CD
			, SUB_BUSS_CDS 		, BILL_TYPE_NM		, SMS_YN			, EMAIL_YN			, FAX_NO
			, HOMEPAGE 			, BUSS_ADDR_DIV		, BUSS_POST_NO		, BUSS_ADDR1		, BUSS_ADDR2
			, BUSS_DORO_CD 		, BUSS_DORO_NM		, BUSS_DORO_BUNHO	, BUSS_DORO_DONG	, BUSS_DORO_DTL
			, BUSS_DORO_BD_NO 	, BUSS_TEL_NO		, BUSS_FAX_NO		, BUSS_HOMEPAGE		, BUSS_EMAIL
			, CEO_ADDR_DIV 		, CEO_POST_NO		, CEO_ADDR1			, CEO_ADDR2			, CEO_DORO_CD
			, CEO_DORO_NM 		, CEO_DORO_BUNHO	, CEO_DORO_DONG		, CEO_DORO_DTL		, CEO_DORO_BD_NO
			, CEO_TEL_NO 		, CEO_FAX_NO		, CEO_HOMEPAGE		, CEO_EMAIL			, PERS_EMAIL
			, CEO_CELL_NO 		, POST_GET_CD		, REG_DTM			, REG_NM			, MOD_DTM
			, MOD_NM 			, KNOW_CDS			, WEB_KEYWORD		, REC_PERS			, REC_COMP
			, ETC_CONT 			, BUSS_EVENT		, SIGNED_CONTR_CONT	, SIGNED_CONTR_DTM	, ATTH_NO
			, MOD_REASON
		 FROM MB_REQ A
		WHERE BIZ_NO = REPLACE(#{bizNo}, '-')
		)

	</insert>


	<!-- 기등록업체(상담, 가입, 조합원) 현황 조회(통합) -->
	<select id="selectMembIntegList" parameterType="Map" resultType="camelMap">
        /* membReqMapper.selectMembIntegList */
        SELECT REG_TYPE
             , MAX(MEMB_KEY) MEMB_KEY
             , MEMB_NM
             , CEO_NM
             , BIZ_NO
             , TEL_NO
             , MAIN_BUSS_CD
             , MEMB_STAT
             , MAX(REG_DTM) REG_DTM
          FROM (
		        SELECT 'M' REG_TYPE
		             , TO_CHAR(MEMB_NO) MEMB_KEY
		             , MEMB_NM MEMB_NM
		             , CEO_NM
		             , BIZ_NO
		             , TEL_NO
		             , MAIN_BUSS_CD
		             , MEMB_STAT MEMB_STAT
		             , REG_DTM
		           FROM MB_MASTER
		          <where>
		          <if test="sMembNm != null and sMembNm != ''"> 			<!-- 업체명(조합원명) -->
				    AND MEMB_NM LIKE '%' || #{sMembNm} || '%'
				  </if>
				  <if test="sBizNo != null and sBizNo != ''"> 			<!-- 사업자번호 -->
				    AND BIZ_NO = REPLACE(#{sBizNo}, '-', '')
				  </if>
				  <if test="sCeoNm != null and sCeoNm != ''"> 			<!-- 대표자명 -->
				    AND CEO_NM LIKE '%' || #{sCeoNm} || '%'
				  </if>
				  <if test="sMainBussCd != null and sMainBussCd != ''"> 	<!-- 주장르 -->
				    AND MAIN_BUSS_CD =  #{sMainBussCd}
				  </if>
		          </where>
		          UNION ALL
		         SELECT 'R' REG_TYPE
		              , TO_CHAR(BIZ_NO) MEMB_KEY
		              , MEMB_NM MEMB_NM
		              , CEO_NM
		              , BIZ_NO
		              , F_GET_CRYPT_DEC(TEL_NO) TEL_NO
		              , MAIN_BUSS_CD
		              , PROC_STAT MEMB_STAT
		              , REG_DTM
		           FROM MB_REQ
		          <where>
		          <if test="sMembNm != null and sMembNm != ''"> 			<!-- 업체명(조합원명) -->
				    AND MEMB_NM LIKE '%' || #{sMembNm} || '%'
				  </if>
				  <if test="sBizNo != null and sBizNo != ''"> 			<!-- 사업자번호 -->
				    AND BIZ_NO = REPLACE(#{sBizNo}, '-', '')
				  </if>
				  <if test="sCeoNm != null and sCeoNm != ''"> 			<!-- 대표자명 -->
				    AND CEO_NM LIKE '%' || #{sCeoNm} || '%'
				  </if>
				  <if test="sMainBussCd != null and sMainBussCd != ''"> 	<!-- 주장르 -->
				    AND MAIN_BUSS_CD =  #{sMainBussCd}
				  </if>
		          </where>
		          UNION ALL
		         SELECT 'S' REG_TYPE
		              , TO_CHAR(COUNS_NO) MEMB_KEY
		              , COMP_NM MEMB_NM
		              , CEO_NM
		              , BIZ_NO
		              , F_GET_CRYPT_DEC(TEL_NO) TEL_NO
		              , MAIN_BUSS_CD
		              , JOIN_STAT MEMB_STAT
		              , REG_DTM
		           FROM MB_COUNSEL
		          <where>
		          <if test="sMembNm != null and sMembNm != ''"> 			<!-- 업체명(조합원명) -->
				    AND COMP_NM LIKE '%' || #{sMembNm} || '%'
				  </if>
				  <if test="sBizNo != null and sBizNo != ''"> 			<!-- 사업자번호 -->
				    AND BIZ_NO = REPLACE(#{sBizNo}, '-', '')
				  </if>
				  <if test="sCeoNm != null and sCeoNm != ''"> 			<!-- 대표자명 -->
				    AND CEO_NM LIKE '%' || #{sCeoNm} || '%'
				  </if>
				  <if test="sMainBussCd != null and sMainBussCd != ''"> 	<!-- 주장르 -->
				    AND MAIN_BUSS_CD = #{sMainBussCd}
				  </if>
		          </where>
		       )
		 GROUP BY REG_TYPE, MEMB_NM, CEO_NM, BIZ_NO, TEL_NO, MAIN_BUSS_CD, MEMB_STAT
         ORDER BY MEMB_NM, REG_TYPE
    </select>


	<!-- 기등록업체(상담, 가입, 조합원) 상세 조회(통합) - 호출부 없음 -->
	<!--<select id="selectMembInteg" parameterType="Map" resultType="camelMap">
        /* membReqMapper.selectMembInteg */
        SELECT REG_TYPE
             , MAX(MEMB_KEY) MEMB_KEY
             , MEMB_NM
             , CEO_NM
             , BIZ_NO
             , TEL_NO
             , MAIN_BUSS_CD
             , MEMB_STAT
             , MAX(REG_DTM) REG_DTM
          FROM (
		        SELECT 'M' REG_TYPE
		             , TO_CHAR(MEMB_NO) MEMB_KEY
		             , MEMB_NM MEMB_NM
		             , CEO_NM
		             , BIZ_NO
		             , TEL_NO
		             , MAIN_BUSS_CD
		             , MEMB_STAT MEMB_STAT
		             , REG_DTM
		           FROM MB_MASTER
		          <where>
		          <if test="membNm != null and membNm != ''">
				    AND MEMB_NM LIKE '%' || #{membNm} || '%'
				  </if>
				  <if test="bizNo != null and bizNo != ''">
				    AND BIZ_NO = REPLACE(#{bizNo}, '-', '')
				  </if>
				  <if test="ceoNm != null and ceoNm != ''">
				    AND CEO_NM LIKE '%' || #{ceoNm} || '%'
				  </if>
				  <if test="mainBussCd != null and mainBussCd != ''">
				    AND MAIN_BUSS_CD =  #{mainBussCd}
				  </if>
		          </where>
		          UNION ALL
		         SELECT 'R' REG_TYPE
		              , TO_CHAR(BIZ_NO) MEMB_KEY
		              , MEMB_NM MEMB_NM
		              , CEO_NM
		              , BIZ_NO
		              , F_GET_CRYPT_DEC(TEL_NO) TEL_NO
		              , MAIN_BUSS_CD
		              , PROC_STAT MEMB_STAT
		              , REG_DTM
		           FROM MB_REQ
		          <where>
		          <if test="membNm != null and membNm != ''">
				    AND MEMB_NM LIKE '%' || #{membNm} || '%'
				  </if>
				  <if test="bizNo != null and bizNo != ''">
				    AND BIZ_NO = REPLACE(#{bizNo}, '-', '')
				  </if>
				  <if test="ceoNm != null and ceoNm != ''">
				    AND CEO_NM LIKE '%' || #{ceoNm} || '%'
				  </if>
				  <if test="mainBussCd != null and mainBussCd != ''">
				    AND MAIN_BUSS_CD =  #{mainBussCd}
				  </if>
		          </where>
		          UNION ALL
		         SELECT 'S' REG_TYPE
		              , TO_CHAR(COUNS_NO) MEMB_KEY
		              , COMP_NM MEMB_NM
		              , CEO_NM
		              , BIZ_NO
		              , F_GET_CRYPT_DEC(TEL_NO) TEL_NO
		              , MAIN_BUSS_CD
		              , JOIN_STAT MEMB_STAT
		              , REG_DTM
		           FROM MB_COUNSEL
		          <where>
		          <if test="membNm != null and membNm != ''">
				    AND COMP_NM LIKE '%' || #{membNm} || '%'
				  </if>
				  <if test="bizNo != null and bizNo != ''">
				    AND BIZ_NO = REPLACE(#{bizNo}, '-', '')
				  </if>
				  <if test="ceoNm != null and ceoNm != ''">
				    AND CEO_NM LIKE '%' || #{ceoNm} || '%'
				  </if>
				  <if test="mainBussCd != null and mainBussCd != ''">
				    AND MAIN_BUSS_CD = #{mainBussCd}
				  </if>
		          </where>
		       )
		 GROUP BY REG_TYPE, MEMB_NM, CEO_NM, BIZ_NO, TEL_NO, MAIN_BUSS_CD, MEMB_STAT
         ORDER BY MEMB_NM, REG_TYPE
    </select>-->

    <!-- 조합원관리(조합원번호 채번) -->
	<select id="selectMaxMembNo" parameterType="Map" resultType="int">
		SELECT NVL(MAX(MEMB_NO), 0) + 1
        FROM MB_MASTER
	</select>

	<!-- 공제가입상담 여부 조회 -->
	<select id="selectMembCounsel" parameterType="Map" resultType="camelMap">
		/* membReqMapper.selectMembCounsel */
		SELECT *
		  FROM (
		  		 SELECT  COUNS_NO
		  		 	   , COMP_NM
		  		 	   , CEO_NM
		  		 	   , BIZ_NO
		  		 	   , MAIN_BUSS_CD
		  		 	   , JOIN_STAT
		  		 	   , POST_NO
		  		 	   , DORO_CD
		  		 	   , DORO_NM
		  		 	   , DORO_BUNHO
		  		 	   , DORO_DONG
		  		 	   , DORO_DTL
		  		 	   , DORO_BD_NO
		  		 	   , COUNS_CONT
		  		 	   , REG_DTM
		  		 	   , REG_NM
		  		 	   , MOD_DTM
		  		 	   , MOD_NM
		  		  FROM MB_COUNSEL
		  		 WHERE BIZ_NO = REPLACE(#{bizNo}, '-', '')
		  		 ORDER BY REG_DTM DESC
		  		)
		 WHERE ROWNUM = 1
	</select>

    <select id="selectMembJoin" parameterType="Map" resultType="camelMap">
		/* membReqMapper.selectMembJoin */
		SELECT *
		  FROM (
		  		 SELECT  MEMB_NM
		  		 	   , CEO_NM
		  		 	   , PROC_STAT
		  		 	   , PROC_DT
		  		 	   , PROC_NM
		  		 	   , PROC_CONT
		  		   FROM MB_REQ
		  		  WHERE BIZ_NO = REPLACE(#{bizNo}, '-', '')
		  		    AND PROC_STAT != '90'
		  		  ORDER BY REG_DTM DESC
		  		)
		 WHERE ROWNUM = 1
	</select>

</mapper>
