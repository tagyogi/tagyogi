<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="proj.biz.memb.repository.MembMapper">

	<!-- 조합원관리 현황 조회  -->
	<select id="selectMembList" parameterType="Map" resultType="camelMap">
		/* MembMapper.selectMembList */
		SELECT
		    M.MEMB_NO
			, M.MEMB_NM
			, M.MEMB_CRETOP
			, M.CEO_NM
			, F_GET_PATTERN(M.LAW_NO, 'CRP') AS LAW_NO
			, F_GET_PATTERN(M.BIZ_NO, 'BIZ') AS BIZ_NO
			, M.MEMB_DIV
			, M.MEMB_STAT
			, M.TEL_NO
			, M.FAX_NO
			, M.ADDR_DIV
			, M.POST_NO
			, M.ADDR1
			, M.ADDR2
			, M.DORO_CD
			, M.DORO_NM
			, M.DORO_BUNHO
			, M.DORO_DONG
			, M.DORO_DTL
			, M.DORO_BD_NO
			, M.BUSS_POST_NO
			, M.BUSS_ADDR1
			, M.BUSS_ADDR2
			, M.BUSS_DORO_CD
			, M.BUSS_DORO_NM
			, M.BUSS_DORO_BUNHO
			, M.BUSS_DORO_DONG
			, M.BUSS_DORO_DTL
			, M.BUSS_DORO_BD_NO
			, F_GET_PATTERN(M.JOIN_DT, 'DT') AS JOIN_DT
			, F_GET_PATTERN(M.LEAVE_DT, 'DT') AS LEAVE_DT
			, M.BANK_CD
			, M.ACCT_NO
			, M.SUB_BUSS_CDS
			, M.MAIN_BUSS_CD
			, F_GET_CD_NM('MB02', M.MAIN_BUSS_CD) AS MAIN_BUSS_CD_NM
			, M.BUSS_ETC
			, M.COMP_EMAIL
			, F_GET_PATTERN(M.BUSS_START_DT, 'DT') AS BUSS_START_DT
			, (CASE WHEN M.ADDR_DIV = 'JB' THEN M.ADDR1 || ' ' || M.ADDR2
					WHEN M.ADDR_DIV = 'DR' THEN M.DORO_NM || ' ' || M.DORO_BUNHO || ' ' || M.DORO_DTL
					ELSE '' END) AS ADDR
			, M.CONTR_OVER_YN
			, M.BELONG
			, F_GET_INVEST_NUM(M.MEMB_NO) AS INVEST_NUM
			, C.CEO_CELL_NO
			, P.PERS_NM
			, P.PERS_EMAIL
			, M.MEMB_CD
			, NVL(M.SUPER_YN, 'N') SUPER_YN
		FROM
		    MB_MASTER M,
		    (SELECT MEMB_NO, CEO_CELL_NO
		     FROM MB_CEO_VIEW
		     WHERE CEO_SEQ = (SELECT MIN(CEO_SEQ)
		                      FROM MB_CEO_VIEW
		                      WHERE CEO_STAT = '10')) C,
		    (SELECT MEMB_NO, PERS_NM, PERS_EMAIL
		     FROM MB_PERSON_VIEW
		     WHERE PERS_SEQ = (SELECT MIN(PERS_SEQ)
		                       FROM MB_PERSON_VIEW
		                       WHERE PERS_STAT = '10')) P
		WHERE
		    M.MEMB_NO = C.MEMB_NO (+)
		    AND M.MEMB_NO = P.MEMB_NO (+)
		    AND M.MEMB_NO != '0'
		<if test="sMembNo != null and sMembNo != ''"> 	<!-- 조합원번호 -->
		    AND M.MEMB_NO = #{sMembNo}
		</if>
		<if test="sMembNm != null and sMembNm != ''"> 	<!-- 조합원명 -->
		    AND M.MEMB_NM LIKE '%' || REPLACE( #{sMembNm},' ','' ) || '%'
		</if>
		<if test="sCeoNm != null and sCeoNm != ''"> 		<!-- 대표자명 -->
		    AND M.CEO_NM LIKE '%' || #{sCeoNm} || '%'
		</if>
		<if test="sMembStat != null and sMembStat != ''"> <!-- 조합원상태 -->
		    AND M.MEMB_STAT = #{sMembStat}
		</if>
		<if test="sBizNo != null and sBizNo != ''"> 		<!-- 사업자등록번호 -->
			AND M.BIZ_NO LIKE '%' || REPLACE(#{sBizNo}, '-') || '%'
		</if>
		<if test="sLawNo != null and sLawNo != ''"> 		<!-- 법인등록번호 -->
			AND M.LAW_NO LIKE '%' || REPLACE(#{sLawNo}, '-') || '%'
		</if>
		<if test="sMainBussCd != null and sMainBussCd != ''"> <!-- 주장르 -->
		    AND M.MAIN_BUSS_CD = #{sMainBussCd}
		</if>
		<if test="sMembCretop != null and sMembCretop != ''"> <!-- 조기경보 -->
		    AND M.MEMB_CRETOP = #{sMembCretop}
		</if>
		<if test="sDept != null and sDept != ''"> 		<!-- 부서 -->
		    AND M.DEPT = #{sDept}
		</if>
		ORDER BY M.MEMB_NO DESC
	</select>

	<!-- 조합원관리 상세 조회 -->
	<select id="selectMemb" parameterType="Map" resultType="camelMap">
		/* MembMapper.selectMemb */
		SELECT
			TO_CHAR(MEMB_NO) MEMB_NO
			, MEMB_NM
			, CEO_NM
			, F_GET_PATTERN(LAW_NO, 'CRP') AS LAW_NO
			, (CASE WHEN LAW_NO IS NOT NULL AND LENGTH(LAW_NO) = 13 THEN SUBSTR(LAW_NO, 0,6) ELSE '' END) LAW_NO1
			, (CASE WHEN LAW_NO IS NOT NULL AND LENGTH(LAW_NO) = 13 THEN SUBSTR(LAW_NO, 7,7) ELSE '' END) LAW_NO2
			, F_GET_PATTERN(BIZ_NO, 'BIZ') AS BIZ_NO
			, (CASE WHEN BIZ_NO IS NOT NULL AND LENGTH(BIZ_NO) = 10 THEN SUBSTR(BIZ_NO, 0,3) ELSE '' END) BIZ_NO1
		    , (CASE WHEN BIZ_NO IS NOT NULL AND LENGTH(BIZ_NO) = 10 THEN SUBSTR(BIZ_NO, 4,2) ELSE '' END) BIZ_NO2
		    , (CASE WHEN BIZ_NO IS NOT NULL AND LENGTH(BIZ_NO) = 10 THEN SUBSTR(BIZ_NO, 6,5) ELSE '' END) BIZ_NO3
			, MEMB_DIV
			, F_GET_CD_NM('MB07', MEMB_DIV) MEMB_DIV_NM
			, MEMB_STAT
			, F_GET_CD_NM('MB08', MEMB_STAT) MEMB_STAT_NM
			, BELONG
            , MEMB_CD
            , F_GET_CD_NM('MB24', MEMB_CD) MEMB_CD_NM
			, TEL_NO
			, FAX_NO
			, ADDR_DIV
			, F_GET_CD_NM('MB01',ADDR_DIV) ADDR_DIV_NM
			, POST_NO
			, ADDR1
			, ADDR2
			, DORO_CD
			, DORO_NM
			, DORO_BUNHO
			, DORO_DONG
			, DORO_DTL
			, DORO_BD_NO
			, CASE WHEN ADDR_DIV = 'JB' THEN '('||POST_NO||') ' || ADDR1||' '||ADDR2
		            ELSE POST_NO||' '||DORO_NM||' ('||DORO_DONG||' '||DORO_BD_NO||') ' || DORO_DTL
		            END ADDR_FULL
            , DORO_NM||' ('||DORO_DONG||' '||DORO_BD_NO||')' ADDR_FULL_DORO
			, BUSS_ADDR_DIV
			, F_GET_CD_NM('MB01',BUSS_ADDR_DIV) BUSS_ADDR_DIV_NM
			, BUSS_POST_NO
			, BUSS_ADDR1
			, BUSS_ADDR2
			, BUSS_DORO_CD
			, BUSS_DORO_NM
			, BUSS_DORO_BUNHO
			, BUSS_DORO_DONG
			, BUSS_DORO_DTL
			, BUSS_DORO_BD_NO
			, CASE WHEN BUSS_ADDR_DIV = 'JB' THEN '('||BUSS_POST_NO||') ' || BUSS_ADDR1||' '||BUSS_ADDR2
		            ELSE BUSS_POST_NO||' '||BUSS_DORO_NM||' '||BUSS_DORO_BUNHO||'('||BUSS_DORO_DONG||' '||BUSS_DORO_BD_NO||') ' || BUSS_DORO_DTL
		            END BUSS_ADDR_FULL
            , BUSS_DORO_NM||' '||BUSS_DORO_BUNHO||'('||BUSS_DORO_DONG||' '||BUSS_DORO_BD_NO||')' BUSS_ADDR_FULL_DORO
			, F_GET_PATTERN(JOIN_DT, 'DT') AS JOIN_DT
			, F_GET_PATTERN(LEAVE_DT, 'DT') AS LEAVE_DT
			, BANK_CD
			, F_GET_CD_NM('CM02',BANK_CD) AS BANK_NM
			, ACCT_NO
			, BUSS_ETC
			, REQ_NO
			, F_GET_PATTERN(EMP_CNT, 'AMT') AS EMP_CNT
			, F_GET_PATTERN(ASSET_AMT, 'AMT') AS ASSET_AMT
			, F_GET_PATTERN(CAPI_AMT, 'AMT') AS CAPI_AMT
			, F_GET_PATTERN(YEAR_SALE_AMT, 'AMT') AS YEAR_SALE_AMT
			, MAIN_PROD
			, BUSS_COND
			, F_GET_PATTERN(BUSS_START_DT, 'DT') AS BUSS_START_DT
			, MAIN_BUSS_CD
			, F_GET_CD_NM('MB02', MAIN_BUSS_CD) MAIN_BUSS_NM
			, SUB_BUSS_CDS
			, DEPO_NM
			, HOMEPAGE
			, BUSS_HOMEPAGE
			, BUSS_TEL_NO
			, BUSS_FAX_NO
			, POST_GET_CD
			, F_GET_CD_NM('MB23',POST_GET_CD) AS POST_GET_NM
			, SACT_CD
			, F_GET_CD_NM('MB26', SACT_CD) SACT_CD_NM
			, F_GET_PATTERN(SACT_DT, 'DT') AS SACT_DT
			, KED_YN
			, REMARK
			, REG_DTM
			, REG_NM
			, MOD_DTM
			, MOD_NM
			, SEAL_FILE_NM
			, SEAL_FILE_SRC
			, SEAL_FILE_PATH
			, PERS_SEAL_FILE_NM
			, PERS_SEAL_FILE_SRC
			, PERS_SEAL_FILE_PATH
			, MEMB_CRETOP
			, F_GET_CD_NM('CRET', MEMB_CRETOP) MEMB_CRETOP_NM
			, MEMO
			, COMP_EMAIL
			, KNOW_CDS
			, WEB_KEYWORD
			, REC_PERS
			, REC_COMP
			, ETC_CONT
			, INVEST_VIEW_YN
			, (CASE WHEN INVEST_VIEW_YN = 'Y' THEN '표시'
	                ELSE '' END) INVEST_VIEW_YN_NM
			, CARD_YN
			, (CASE WHEN CARD_YN = 'Y' THEN '사용'
		            ELSE '미사용' END) CARD_YN_NM
			, DEPT
			, F_GET_CD_NM('CM04', DEPT) DEPT_NM
			, CONTR_OVER_YN
			, ATTH_NO
			, MOD_REASON
			, WORK_STOP_DT
			, WORK_STOP_REASON
			, USER_ID
			, USER_PW

			/* 업무거래정보추가 */
			, NVL(F_GET_INVEST_NUM(MEMB_NO),0) INVEST_NUM
			, NVL(F_GET_INVEST_AMT(MEMB_NO),0) INVEST_AMT
			, NVL(F_GET_MORT_NUM(MEMB_NO),0) MORT_NUM
			, NVL(F_GET_MORT_AMT(MEMB_NO),0) MORT_AMT
			, NVL(F_GET_ASS_GET_NUM(MEMB_NO),0) ASS_GET_NUM
			, NVL(F_GET_ASS_GET_AMT(MEMB_NO),0) ASS_GET_AMT
			, NVL(F_GET_ASS_SET_NUM(MEMB_NO),0) ASS_SET_NUM
			, NVL(F_GET_ASS_SET_AMT(MEMB_NO),0) ASS_SET_AMT
			, NVL(SUPER_YN, 'N') SUPER_YN
			, DECODE(NVL(SUPER_YN, 'N'), 'Y', '여', '부') SUPER_YN_NM
		  FROM MB_MASTER
		 WHERE MEMB_NO = #{membNo}
	</select>

	<!-- 조합원관리 등록 처리 -->
	<insert id="insertMemb" parameterType="Map"  >
		/* MembMapper.insertMemb */
		INSERT INTO MB_MASTER (
			MEMB_NO			, MEMB_NM			, CEO_NM			, LAW_NO			, BIZ_NO
			, MEMB_DIV			, MEMB_STAT			, MEMB_CD			, TEL_NO			, FAX_NO
			, ADDR_DIV			, POST_NO			, ADDR1			, ADDR2			, DORO_CD
			, DORO_NM			, DORO_BUNHO			, DORO_DONG			, DORO_DTL			, DORO_BD_NO
			, BUSS_ADDR_DIV			, BUSS_POST_NO			, BUSS_DORO_CD			, BUSS_DORO_NM			, BUSS_DORO_BUNHO
			
			, BUSS_DORO_DONG			, BUSS_DORO_DTL			, BUSS_DORO_BD_NO			, BUSS_ADDR1			, BUSS_ADDR2
			, JOIN_DT			, BANK_CD			, ACCT_NO			, BUSS_ETC			, EMP_CNT
			, ASSET_AMT			, CAPI_AMT			, YEAR_SALE_AMT			, MAIN_PROD			, BUSS_COND
			, BUSS_START_DT			, BELONG			, MAIN_BUSS_CD			, SUB_BUSS_CDS			, DEPO_NM
			, HOMEPAGE			, BUSS_HOMEPAGE			, BUSS_TEL_NO			, BUSS_FAX_NO			, POST_GET_CD
			
			, REMARK			, REG_DTM			, REG_NM			, MOD_DTM			, MOD_NM
			, SEAL_FILE_NM			, SEAL_FILE_SRC			, SEAL_FILE_PATH			, PERS_SEAL_FILE_NM			, PERS_SEAL_FILE_SRC
			, PERS_SEAL_FILE_PATH			, MEMB_CRETOP			, MEMO			, COMP_EMAIL			, KNOW_CDS
			, WEB_KEYWORD			, REC_PERS			, REC_COMP			, ETC_CONT			, INVEST_VIEW_YN
			, CARD_YN			, DEPT			, CONTR_OVER_YN			, ATTH_NO			, SUPER_YN
		) VALUES (
			#{membNo}			, #{membNm}			, #{ceoNm}			, #{lawNo}			, REPLACE(#{bizNo}, '-')
			, DECODE(#{lawNo}, NULL, 'P', 'C')			, #{membStat}			, #{membCd}			, #{telNo}			, #{faxNo}
			, #{addrDiv}			, #{postNo}			, #{addr1}			, #{addr2}			, #{doroCd}
			, #{doroNm}			, #{doroBunho}			, #{doroDong}			, #{doroDtl}			, #{doroBdNo}
			, #{bussAddrDiv}			, #{bussPostNo}			, #{bussDoroCd}			, #{bussDoroNm}			, #{bussDoroBunho}
			
			, #{bussDoroDong}			, #{bussDoroDtl}			, #{bussDoroBdNo}			, #{bussAddr1}			, #{bussAddr2}
			, REPLACE(NVL(#{joinDt}, TO_CHAR(SYSDATE, 'YYYYMMDD')), '-')			, #{bankCd}			, #{acctNo}			, #{bussEtc}			, #{empCnt}
			, REPLACE(#{assetAmt}, ',', '')			, REPLACE(#{capiAmt}, ',', '')			, REPLACE(#{yearSaleAmt}, ',', '')			, #{mainProd}			, #{bussCond}
			, REPLACE(#{bussStartDt}, '-')			, #{belong}			, #{mainBussCd}			, #{subBussCds}			, #{depoNm}
			, #{homepage}			, #{bussHomepage}			, #{bussTelNo}			, #{bussFaxNo}			, #{postGetCd}
			, #{remark}			, SYSDATE			, #{userNm}			, SYSDATE			, #{userNm}
			, #{sealFileNm}			, #{sealFileSrc}			, #{sealFilePath}			, #{persSealFileNm}			, #{persSealFileSrc}
			, #{persSealFilePath}			, #{membCretop}			, #{memo}			, #{compEmail}			, #{knowCds}
			, #{webKeyword}			, #{recPers}			, #{recComp}			, #{etcCont}			, #{investViewYn}
			, #{cardYn}			, #{dept}			, #{contrOverYn}			, #{atthNo}			, #{superYn}
		)
	</insert>

	<!-- 조합원관리 수정 처리 -->
	<update id="updateMemb" parameterType="Map"  >
		/* MembMapper.updateMemb */
		UPDATE MB_MASTER
		SET
			MEMB_NM 			= #{membNm}
			, CEO_NM 			= #{ceoNm}
			, LAW_NO 			= #{lawNo}
			, BIZ_NO 			= #{bizNo}
			, MEMB_DIV 			= #{membDiv}
			, MEMB_STAT 		= #{membStat}
			, MEMB_CD			= #{membCd}
			, TEL_NO 			= #{telNo}
			, FAX_NO 			= #{faxNo}
			, ADDR_DIV 			= #{addrDiv}
			, POST_NO 			= #{postNo}
			, ADDR1 			= #{addr1}
			, ADDR2 			= #{addr2}
			, DORO_CD 			= #{doroCd}
			, DORO_NM 			= #{doroNm}
			, DORO_BUNHO 		= #{doroBunho}
			, DORO_DONG 		= #{doroDong}
			, DORO_DTL 			= #{doroDtl}
			, DORO_BD_NO 		= #{doroBdNo}
			, BUSS_ADDR_DIV 	= #{bussAddrDiv}
			, BUSS_ADDR1 	    = #{bussAddr1}
			, BUSS_ADDR2 	    = #{bussAddr2}
			, BUSS_POST_NO 		= #{bussPostNo}
			, BUSS_DORO_CD 		= #{bussDoroCd}
			, BUSS_DORO_NM 		= #{bussDoroNm}
			, BUSS_DORO_BUNHO 	= #{bussDoroBunho}
			, BUSS_DORO_DONG	= #{bussDoroDong}
			, BUSS_DORO_DTL 	= #{bussDoroDtl}
			, BUSS_DORO_BD_NO 	= #{bussDoroBdNo}
			, JOIN_DT 			= REPLACE(#{joinDt}, '-')
			, LEAVE_DT 			= REPLACE(#{leaveDt}, '-')
			, BANK_CD 			= #{bankCd}
			, ACCT_NO 			= #{acctNo}
			, BUSS_ETC 			= #{bussEtc}
			, REQ_NO 			= #{reqNo}
			, EMP_CNT 			= #{empCnt}
			, ASSET_AMT 		= REPLACE(#{assetAmt}, ',', '')
			, CAPI_AMT 			= REPLACE(#{capiAmt}, ',', '')
			, YEAR_SALE_AMT 	= REPLACE(#{yearSaleAmt}, ',', '')
			, MAIN_PROD 		= #{mainProd}
			, BUSS_COND 		= #{bussCond}
			, BUSS_START_DT 	= REPLACE(#{bussStartDt}, '-')
			, BELONG 			= #{belong}
			, MAIN_BUSS_CD 		= #{mainBussCd}
			, SUB_BUSS_CDS 		= #{subBussCds}
			<!--, DEPO_NM 			= #{depoNm}-->
			, HOMEPAGE 			= #{homepage}
			, BUSS_HOMEPAGE 	= #{bussHomepage}
			, BUSS_TEL_NO 		= #{bussTelNo}
			, BUSS_FAX_NO 		= #{bussFaxNo}
			, POST_GET_CD 		= #{postGetCd}
			, SACT_CD 			= #{sactCd}
			, SACT_DT 			= REPLACE(#{sactDt}, '-')
			, REMARK 			= #{remark}
			, MOD_DTM 			= SYSDATE
			, MOD_NM 			= #{userNm}
			<!--, SEAL_FILE_NM 		= #{sealFileNm}
			, SEAL_FILE_SRC 	= #{sealFileSrc}
			, SEAL_FILE_PATH 	= #{sealFilePath}
			, PERS_SEAL_FILE_NM = #{persSealFileNm}
			, PERS_SEAL_FILE_SRC = #{persSealFileSrc}
			, PERS_SEAL_FILE_PATH = #{persSealFilePath}-->
			, MEMB_CRETOP 		= #{membCretop}
			, MEMO 				= #{memo}
			, COMP_EMAIL 		= #{compEmail}
			, KNOW_CDS 			= #{knowCds}
			, WEB_KEYWORD 		= #{webKeyword}
			, REC_PERS			= #{recPers}
			, REC_COMP 			= #{recComp}
			, ETC_CONT 			= #{etcCont}
			, INVEST_VIEW_YN 	= #{investViewYn}
			, CARD_YN 			= #{cardYn}
			, DEPT 				= #{dept}
			<!--, CONTR_OVER_YN 	= #{contrOverYn}-->
			, MOD_REASON = #{modReason}
			, WORK_STOP_DT = REPLACE(#{workStopDt}, '-')
			, WORK_STOP_REASON = #{workStopReason}
			, SUPER_YN = #{superYn}
		WHERE MEMB_NO = #{membNo}
	</update>

	<update id="updateMembHome" parameterType="Map"  >
		/* MembMapper.updateMembHome */
		UPDATE MB_MASTER
		SET
			MEMB_NM 			= #{membNm}
			, CEO_NM 			= #{ceoNm}
			, LAW_NO 			= #{lawNo}
			, BIZ_NO 			= #{bizNo}
			, MEMB_DIV 			= #{membDiv}
			, MEMB_STAT 		= #{membStat}
			<!--, MEMB_CD			= #{membCd}-->
			, TEL_NO 			= #{telNo}
			, FAX_NO 			= #{faxNo}
			, ADDR_DIV 			= #{addrDiv}
			, POST_NO 			= #{postNo}
			, ADDR1 			= #{addr1}
			, ADDR2 			= #{addr2}
			, DORO_CD 			= #{doroCd}
			, DORO_NM 			= #{doroNm}
			, DORO_BUNHO 		= #{doroBunho}
			, DORO_DONG 		= #{doroDong}
			, DORO_DTL 			= #{doroDtl}
			, DORO_BD_NO 		= #{doroBdNo}
			, BUSS_ADDR_DIV 	= #{bussAddrDiv}
			, BUSS_ADDR1 	    = #{bussAddr1}
			, BUSS_ADDR2 	    = #{bussAddr2}
			, BUSS_POST_NO 		= #{bussPostNo}
			, BUSS_DORO_CD 		= #{bussDoroCd}
			, BUSS_DORO_NM 		= #{bussDoroNm}
			, BUSS_DORO_BUNHO 	= #{bussDoroBunho}
			, BUSS_DORO_DONG	= #{bussDoroDong}
			, BUSS_DORO_DTL 	= #{bussDoroDtl}
			, BUSS_DORO_BD_NO 	= #{bussDoroBdNo}
			, JOIN_DT 			= REPLACE(#{joinDt}, '-')
			, LEAVE_DT 			= REPLACE(#{leaveDt}, '-')
			, BANK_CD 			= #{bankCd}
			, ACCT_NO 			= #{acctNo}
			, BUSS_ETC 			= #{bussEtc}
			<!--, REQ_NO 			= #{reqNo}-->
			, EMP_CNT 			= #{empCnt}
			, ASSET_AMT 		= REPLACE(#{assetAmt}, ',', '')
			, CAPI_AMT 			= REPLACE(#{capiAmt}, ',', '')
			, YEAR_SALE_AMT 	= REPLACE(#{yearSaleAmt}, ',', '')
			, MAIN_PROD 		= #{mainProd}
			, BUSS_COND 		= #{bussCond}
			, BUSS_START_DT 	= REPLACE(#{bussStartDt}, '-')
			, BELONG 			= #{belong}
			, MAIN_BUSS_CD 		= #{mainBussCd}
			, SUB_BUSS_CDS 		= #{subBussCds}
			, DEPO_NM 			= #{depoNm}
			, HOMEPAGE 			= #{homepage}
			, BUSS_HOMEPAGE 	= #{bussHomepage}
			, BUSS_TEL_NO 		= #{bussTelNo}
			, BUSS_FAX_NO 		= #{bussFaxNo}
			, POST_GET_CD 		= #{postGetCd}
			, SACT_CD 			= #{sactCd}
			, SACT_DT 			= REPLACE(#{sactDt}, '-')
			<!--, REMARK 			= #{remark}-->
			, MOD_DTM 			= SYSDATE
			, MOD_NM 			= #{userNm}
			<!--, MEMB_CRETOP 		= #{membCretop}-->
			<!--, MEMO 				= #{memo}-->
			, COMP_EMAIL 		= #{compEmail}
			<!--, KNOW_CDS 			= #{knowCds}-->
			<!--, WEB_KEYWORD 		= #{webKeyword}-->
			<!--, REC_PERS			= #{recPers}
			, REC_COMP 			= #{recComp}
			, ETC_CONT 			= #{etcCont}-->
			<!--, INVEST_VIEW_YN 	= #{investViewYn}-->
			<!--, CARD_YN 			= #{cardYn}-->
			<!--, DEPT 				= #{dept}-->
			<!--, CONTR_OVER_YN 	= #{contrOverYn}-->
			<!--, MOD_REASON = #{modReason}-->
			<!--, WORK_STOP_DT = REPLACE(#{workStopDt}, '-')
			, WORK_STOP_REASON = #{workStopReason}-->
			, USER_ID = #{userId}
			, USER_PW = #{userPwEnc}
		WHERE MEMB_NO = #{membNo}
	</update>

	<!-- 조합원 수정(기재변경, 계좌정보 수정) -->
	<update id="updateMembChg" parameterType="Map">
		/* MembMapper.updateMembChg */
		UPDATE MB_MASTER
		<set>
			<if test='chgCeoNm != null and chgCeoNm != "" and ceoNmChgYn == "Y"'>		<!-- 기재변경에서 호출중 -->
				CEO_NM = #{chgCeoNm},
			</if>
			<if test='chgMembNm != null and chgMembNm != "" and membNmChgYn == "Y"'>	<!-- 기재변경에서 호출중 -->
				MEMB_NM = #{chgMembNm},
			</if>
			<if test='chgPostNo != null and chgPostNo != "" and addrChgYn == "Y"'>		<!-- 기재변경에서 호출중 -->
				ADDR_DIV = #{chgAddrDiv},
		        POST_NO = #{chgPostNo},
		        ADDR1 = #{chgAddr1},
		        ADDR2 = #{chgAddr2},
		        DORO_CD = #{chgDoroCd},
		        DORO_NM = #{chgDoroNm},
		        DORO_BUNHO = #{chgDoroBunho},
		        DORO_DONG = #{chgDoroDong},
		        DORO_DTL = #{chgDoroDtl},
		        DORO_BD_NO = #{chgDoroBdNo},
			</if>
			<if test='bankChgYn == "Y"'>	<!-- 계좌관리에서 호출중 -->
				BANK_CD = #{bankCd},	/*은행코드(CM02)*/
				ACCT_NO = #{acctNo},    /*계좌번호*/
				DEPO_NM = #{depoNm},    /*예금주*/
			</if>
				MOD_DTM = SYSDATE,
	            MOD_NM = #{userNm}
        </set>
		WHERE
			MEMB_NO = #{membNo}
	</update>

	<!-- 조합원관리 삭제 처리 -->
	<delete id="deleteMemb" parameterType="Map">
		/* MembMapper.deleteMemb */
		DELETE FROM MB_MASTER
		 WHERE MEMB_NO = #{membNo}
	</delete>

	<!-- 조합원관리 > 대표자현황 조회 -->
    <select id="selectMembCeoList" parameterType="Map" resultType="camelMap">
        /* MembMapper.selectMembCeoList */
        SELECT A.*
             , (CASE WHEN A.ADDR_DIV = 'JB' THEN A.CEO_ADDR1 || ' ' || A.CEO_ADDR2
					 WHEN A.ADDR_DIV = 'DR' THEN A.CEO_POST_NO||' '||A.DORO_NM||' '||A.DORO_BUNHO||'('||A.DORO_DONG||' '||A.DORO_BD_NO||') ' || A.DORO_DTL
					 ELSE '' END) AS ADDR_FULL_DORO
          FROM
          (
	        SELECT CEO_SEQ
	             , CEO_NM
	             , CEO_STAT
	             , JUMIN_NO
	             , NVL(MAJOR_YN, 'N') MAJOR_YN
	             , (CASE WHEN MAJOR_YN = 'Y' THEN '주대표'
	                    ELSE ' ' END) AS MAJOR_NM
	             , F_GET_PATTERN(CHAR_DT, 'DT') AS CHAR_DT
	             , F_GET_PATTERN(DISCHAR_DT, 'DT') AS DISCHAR_DT
				 , CEO_POST_NO
				 , ADDR_DIV
	             , CEO_ADDR1
	             , CEO_ADDR2
	             , DORO_POST_NO
	             , DORO_CD
	             , DORO_NM
	             , DORO_BUNHO
	             , DORO_DONG
	             , DORO_DTL
	             , DORO_BD_NO
	             , CEO_TEL_NO
	             , CEO_CELL_NO
	             , EMAIL
	             , SMS_YN
	             , EMAIL_YN
	             , REMARK
	             , MEMB_NO
	          FROM MB_CEO_VIEW
	         WHERE MEMB_NO = #{membNo}
	         ORDER BY CEO_SEQ
	        ) A
    </select>

    <!-- 조합원 대표자 등록 처리 -->
	<insert id="insertMembCeo" parameterType="Map"  >
		/* MembMapper.insertMembCeo */
		<selectKey resultType="java.lang.String" keyProperty="newSeq" order="BEFORE">
          SELECT NVL(MAX(CEO_SEQ), 0) + 1
            FROM MB_CEO_VIEW
           WHERE MEMB_NO = #{membNo}
	    </selectKey>
		INSERT INTO MB_CEO (
			MEMB_NO
			, CEO_SEQ
			, CEO_NM
			, CEO_STAT
			, JUMIN_NO
			, MAJOR_YN
			, CHAR_DT
			, ADDR_DIV
			, CEO_POST_NO
			, CEO_ADDR1
			, CEO_ADDR2
			, DORO_POST_NO
			, DORO_CD
			, DORO_NM
			, DORO_BUNHO
			, DORO_DONG
			, DORO_DTL
			, DORO_BD_NO
			, CEO_TEL_NO
			, CEO_CELL_NO
			, CEO_FAX_NO
			, CEO_HOMEPAGE
			, EMAIL
			, SMS_YN
			, EMAIL_YN
			, REMARK
			, REG_DTM
			, REG_NM
			, MOD_DTM
			, MOD_NM
		) VALUES (
			#{membNo}
			, #{newSeq}
			, #{ceoNm}
			, #{ceoStat}
			, F_GET_CRYPT_ENC(REPLACE(#{juminNo}, '-'))
			, #{majorYn}
			, REPLACE(#{charDt}, '-')
			, #{addrDiv}
			, F_GET_CRYPT_ENC(#{ceoPostNo})
			, F_GET_CRYPT_ENC(#{ceoAddr1})
			, F_GET_CRYPT_ENC(#{ceoAddr2})
			, F_GET_CRYPT_ENC(#{doroPostNo})
			, F_GET_CRYPT_ENC(#{doroCd})
			, F_GET_CRYPT_ENC(#{doroNm})
			, F_GET_CRYPT_ENC(#{doroBunho})
			, F_GET_CRYPT_ENC(#{doroDong})
			, F_GET_CRYPT_ENC(#{doroDtl})
			, F_GET_CRYPT_ENC(#{doroBdNm})
			, F_GET_CRYPT_ENC(REPLACE(#{ceoTelNo}, '-'))
			, F_GET_CRYPT_ENC(REPLACE(#{ceoCellNo}, '-'))
			, #{ceoFaxNo}
			, #{ceoHomepage}
			, F_GET_CRYPT_ENC(#{email})
			, #{smsYn}
			, #{emailYn}
			, #{remark}
			, SYSDATE
			, #{userNm}
			, SYSDATE
			, #{userNm}
		)
	</insert>

    <!-- 조합원 대표자 수정 처리 -->
	<update id="updateMembCeo" parameterType="Map" >
		/* MembMapper.updateMembCeo */
		UPDATE MB_CEO
		SET
			CEO_NM 			= #{ceoNm}
			, CEO_STAT 		= #{ceoStat}
			, JUMIN_NO 		= F_GET_CRYPT_ENC(REPLACE(#{juminNo}, '-'))
			, MAJOR_YN 		= #{majorYn}
			, CHAR_DT 		= REPLACE(#{charDt}, '-')
			, DISCHAR_DT 	= REPLACE(#{discharDt}, '-')
			, ADDR_DIV 		= #{addrDiv}
			, CEO_POST_NO 	= F_GET_CRYPT_ENC(#{ceoPostNo})
			, CEO_ADDR1 	= F_GET_CRYPT_ENC(#{ceoAddr1})
			, CEO_ADDR2 	= F_GET_CRYPT_ENC(#{ceoAddr2})
			, DORO_POST_NO 	= F_GET_CRYPT_ENC(#{doroPostNo})
			, DORO_CD 		= F_GET_CRYPT_ENC(#{doroCd})
			, DORO_NM 		= F_GET_CRYPT_ENC(#{doroNm})
			, DORO_BUNHO 	= F_GET_CRYPT_ENC(#{doroBunho})
			, DORO_DONG 	= F_GET_CRYPT_ENC(#{doroDong})
			, DORO_DTL 		= F_GET_CRYPT_ENC(#{doroDtl})
			, DORO_BD_NO 	= F_GET_CRYPT_ENC(#{doroBdNm})
			, CEO_TEL_NO 	= F_GET_CRYPT_ENC(REPLACE(#{ceoTelNo}, '-'))
			, CEO_CELL_NO 	= F_GET_CRYPT_ENC(REPLACE(#{ceoCellNo}, '-'))
			, CEO_FAX_NO 	= #{ceoFaxNo}
			, CEO_HOMEPAGE 	= #{ceoHomepage}
			, EMAIL 		= F_GET_CRYPT_ENC(#{email})
			, SMS_YN 		= #{smsYn}
			, EMAIL_YN 		= #{emailYn}
			, REMARK 		= #{remark}
			, MOD_DTM 		= SYSDATE
			, MOD_NM 		= #{userNm}
		WHERE MEMB_NO 		= #{membNo}
		  AND CEO_SEQ 		= #{ceoSeq}
	</update>

	<!-- 조합원 대표자 삭제 처리 -->
	<delete id="deleteMembCeo" parameterType="Map"  >
		/* MembMapper.deleteMembCeo */
		DELETE FROM MB_CEO
		 WHERE MEMB_NO = #{membNo}
		   AND CEO_SEQ = #{ceoSeq}
	</delete>

	<!-- 조합원관리 > 담당자현황 조회 -->
    <select id="selectMembPersonList" parameterType="Map" resultType="camelMap">
        /* MembMapper.selectMembPersonList */
        SELECT PERS_SEQ
             , PERS_NM
             , PERS_STAT
             , F_GET_CD_NM('MB10',PERS_STAT) PERS_STAT_NM
             , (PERS_POS || ' / ' || F_GET_CD_NM('MB10',PERS_STAT)) AS PERS_POS_STAT
             , DEPT_NM
             , PERS_POS
             , PERS_TEL_NO
             , PERS_EXT_NO
             , PERS_CELL_NO
             , PERS_FAX_NO
             , PERS_EMAIL
             , SMS_YN
             , EMAIL_YN
             , MEMB_NO
             , REMARK
             , EXPR_YN
          FROM MB_PERSON_VIEW
         WHERE MEMB_NO = #{membNo}
		<if test="sPersStat != null and sPersStat != ''"> 		<!-- 상태 -->
		    AND PERS_STAT = #{sPersStat}
		</if>
		<if test="sSmsYn != null and sSmsYn != ''"> 		<!-- SMS수신여부 -->
		    AND SMS_YN = #{sSmsYn}
		</if>
		<if test="sPersStat != null and sPersStat != ''"> 		<!-- -->
		    AND PERS_STAT = #{sPersStat}
		</if>
    </select>

    <!-- 조합원 담당자 등록 처리 -->
	<insert id="insertMembPerson" parameterType="Map"  >
		/* MembMapper.insertMembPerson */
		<selectKey resultType="java.lang.String" keyProperty="newSeq" order="BEFORE">
          	SELECT NVL(MAX(PERS_SEQ), 0) + 1
              FROM MB_PERSON_VIEW
             WHERE MEMB_NO = #{membNo}
	    </selectKey>
		INSERT INTO MB_PERSON (
			MEMB_NO
			, PERS_SEQ
			, PERS_NM
			, PERS_STAT
			, DEPT_NM
			, PERS_POS
			, PERS_TEL_NO
			, PERS_EXT_NO
			, PERS_CELL_NO
			, PERS_FAX_NO
			, PERS_EMAIL
			, SMS_YN
			, EMAIL_YN
			, REMARK
			, REG_DTM
			, REG_NM
			, MOD_DTM
			, MOD_NM
			, EXPR_YN
		) VALUES (
			#{membNo}
			, #{newSeq}
			, #{persNm}
			, #{persStat} 
			, #{deptNm}
			, #{persPos}
			, F_GET_CRYPT_ENC(REPLACE(#{persTelNo}, '-'))
			, #{persExtNo}
			, F_GET_CRYPT_ENC(REPLACE(#{persCellNo}, '-'))
			, REPLACE(#{persFaxNo}, '-')
			, F_GET_CRYPT_ENC(#{persEmail})
			, #{smsYn}
			, #{emailYn}
			, #{remark}
			, SYSDATE
			, #{userNm}
			, SYSDATE
			, #{userNm}
			, NVL(#{exprYn}, 'Y')
		)
	</insert>

    <!-- 조합원 담당자 수정 처리 -->
	<update id="updateMembPerson" parameterType="Map" >
		/* MembMapper.updateMembPerson */
		UPDATE MB_PERSON
		SET
			PERS_NM 		= #{persNm}
			, PERS_STAT 	= #{persStat}
			, DEPT_NM 		= #{deptNm}
			, PERS_POS 		= #{persPos}
			, PERS_TEL_NO 	= F_GET_CRYPT_ENC(REPLACE(#{persTelNo}, '-'))
			, PERS_EXT_NO 	= #{persExtNo}
			, PERS_CELL_NO 	= F_GET_CRYPT_ENC(REPLACE(#{persCellNo}, '-'))
			, PERS_FAX_NO 	= REPLACE(#{persFaxNo}, '-')
			, PERS_EMAIL 	= F_GET_CRYPT_ENC(#{persEmail})
			, SMS_YN 		= #{smsYn}
			, EMAIL_YN 		= #{emailYn}
			, REMARK 		= #{remark}
			, MOD_DTM 		= SYSDATE
			, MOD_NM 		= #{userNm}
			<if test='gubun != "H"'>	<!-- 홈페이지 제외 -->
			, EXPR_YN 		= #{exprYn}
			</if>
		WHERE MEMB_NO 		= #{membNo}
		  AND PERS_SEQ 		= #{persSeq}
	</update>

	<!-- 조합원 담당자 삭제 처리 -->
	<delete id="deleteMembPerson" parameterType="Map"  >
		/* MembMapper.deleteMembPerson */
		DELETE FROM MB_PERSON
		 WHERE MEMB_NO = #{membNo}
		   AND PERS_SEQ = #{persSeq}
	</delete>



    <!-- 조합원 이력 추가 -->
	<insert id="insertMembHist" parameterType="Map" >
		/* MembMapper.insertMembHist */
		INSERT INTO MB_MASTER_HIST (
		    MEMB_NO
		    , HIST_SEQ
		    , HIST_REG_DTM		    , HIST_REG_NM		    , HIST_REASON
		    , MEMB_NM		  	  , CEO_NM		    , LAW_NO		    , BIZ_NO
		    , MEMB_DIV		    	, MEMB_STAT		    , MEMB_CD		    , TEL_NO		    , FAX_NO
		    , ADDR_DIV		    	, POST_NO		    , ADDR1		    	, ADDR2		    	, DORO_CD
		    , DORO_NM		    	, DORO_BUNHO		, DORO_DONG		    , DORO_DTL		    , DORO_BD_NO
		    , BUSS_ADDR_DIV			, BUSS_POST_NO		, BUSS_ADDR1		, BUSS_ADDR2		, BUSS_DORO_CD
		    , BUSS_DORO_NM			, BUSS_DORO_BUNHO	, BUSS_DORO_DONG	, BUSS_DORO_DTL		, BUSS_DORO_BD_NO
		    , JOIN_DT		    	, LEAVE_DT		    , BANK_CD		    , ACCT_NO		    , BUSS_ETC
		    , REQ_NO		    	, EMP_CNT		    , ASSET_AMT		    , CAPI_AMT		    , YEAR_SALE_AMT
		    , MAIN_PROD		    	, BUSS_COND		    , BUSS_START_DT		, BELONG		    , MAIN_BUSS_CD
		    , SUB_BUSS_CDS			, DEPO_NM		    , HOMEPAGE		    , BUSS_HOMEPAGE		, BUSS_TEL_NO
		    , BUSS_FAX_NO			, POST_GET_CD		, SACT_CD		    , SACT_DT		    , KED_YN
		    , REMARK		    	, REG_DTM		    , REG_NM		    , MOD_DTM		    , MOD_NM
		    , SEAL_FILE_NM		    , SEAL_FILE_SRC		, SEAL_FILE_PATH	, PERS_SEAL_FILE_NM	, PERS_SEAL_FILE_SRC
		    , PERS_SEAL_FILE_PATH	, MEMB_CRETOP		, MEMO		    	, COMP_EMAIL		, KNOW_CDS
		    , WEB_KEYWORD		    , REC_PERS		    , REC_COMP		    , ETC_CONT		    , INVEST_VIEW_YN
		    , CARD_YN		    	, DEPT		    	, CONTR_OVER_YN		, WORK_STOP_DT		, WORK_STOP_REASON
		    , SUPER_YN
		)
		(
		SELECT
			MEMB_NO
			, (SELECT NVL(MAX(HIST_SEQ), 0)+1 FROM MB_MASTER_HIST WHERE MEMB_NO = A.MEMB_NO)
			, SYSDATE				, #{userNm}		    , #{histReason}
		    , MEMB_NM		    	, CEO_NM		    , LAW_NO		    , BIZ_NO
		    , MEMB_DIV		    	, MEMB_STAT		    , MEMB_CD		    , TEL_NO		    , FAX_NO
		    , ADDR_DIV		    	, POST_NO		    , ADDR1		    	, ADDR2		    	, DORO_CD
		    , DORO_NM		    	, DORO_BUNHO		, DORO_DONG		    , DORO_DTL		    , DORO_BD_NO
		    , BUSS_ADDR_DIV			, BUSS_POST_NO		, BUSS_ADDR1		, BUSS_ADDR2		, BUSS_DORO_CD
		    , BUSS_DORO_NM			, BUSS_DORO_BUNHO	, BUSS_DORO_DONG	, BUSS_DORO_DTL		, BUSS_DORO_BD_NO
		    , JOIN_DT		    	, LEAVE_DT		    , BANK_CD		    , ACCT_NO		    , BUSS_ETC
		    , REQ_NO		    	, EMP_CNT		    , ASSET_AMT		    , CAPI_AMT		    , YEAR_SALE_AMT
		    , MAIN_PROD		    	, BUSS_COND		    , BUSS_START_DT		, BELONG		    , MAIN_BUSS_CD
		    , SUB_BUSS_CDS			, DEPO_NM		    , HOMEPAGE		    , BUSS_HOMEPAGE		, BUSS_TEL_NO
		    , BUSS_FAX_NO			, POST_GET_CD		, SACT_CD		    , SACT_DT		    , KED_YN
		    , REMARK		    	, REG_DTM		    , REG_NM		    , MOD_DTM		    , MOD_NM
		    , SEAL_FILE_NM		    , SEAL_FILE_SRC		, SEAL_FILE_PATH	, PERS_SEAL_FILE_NM	, PERS_SEAL_FILE_SRC
		    , PERS_SEAL_FILE_PATH	, MEMB_CRETOP		, MEMO		    	, COMP_EMAIL		, KNOW_CDS
		    , WEB_KEYWORD		    , REC_PERS		    , REC_COMP		    , ETC_CONT		    , INVEST_VIEW_YN
		    , CARD_YN		    	, DEPT		    	, CONTR_OVER_YN		, WORK_STOP_DT		, WORK_STOP_REASON
		    , SUPER_YN
		  FROM MB_MASTER A
		 WHERE MEMB_NO = #{membNo}
		)

	</insert>

	<!-- 조합원관리(조합원번호 채번) -->
    <select id="selectMembNoSeq" parameterType="Map" resultType="java.lang.String">
        SELECT NVL(MAX(MEMB_NO), 0) + 1
          FROM MB_MASTER
    </select>


	<!-- 보증약정 출자 유형 업데이트 -->
	<update id="updateGuarContrType" parameterType="Map" >
		/* MembMapper.updateGuarContrType */
		UPDATE MB_MASTER
		   SET CONTR_OVER_YN = #{contrOverYn}
		     , MOD_DTM = SYSDATE
			 , MOD_NM = #{userNm}
		 WHERE MEMB_NO = #{membNo}
	</update>

	<!-- 조합원 대표 + 담당자 리스트(보증발급관리 등록,수정에서 사용 - selectBox) -->
    <select id="selectCeoPersList" parameterType="Map" resultType="camelMap">
        /* MembMapper.selectCeoPersList */
        SELECT
		    'CEO' REQ_TYPE
		    , '(대표자)' REQ_TYPE_NM
		    , CEO_SEQ REQ_SEQ
		    , CEO_NM REQ_NM
		    , NVL(CEO_TEL_NO, CEO_CELL_NO) REQ_TEL
		  FROM MB_CEO_VIEW
		 WHERE MEMB_NO = #{membNo}
		UNION ALL
		SELECT
		    'PERSON' REQ_TYPE
		    , '(담당자)' REQ_TYPE_NM
		    , PERS_SEQ REQ_SEQ
		    , PERS_NM REQ_NM
		    , NVL(PERS_TEL_NO, PERS_CELL_NO) REQ_TEL
		  FROM MB_PERSON_VIEW
		 WHERE MEMB_NO = #{membNo}
		   AND EXPR_YN = 'Y'
		 ORDER BY REQ_TYPE, REQ_NM
		 <!-- ORDER BY REQ_TYPE, REQ_SEQ : 2023-12-19 요청으로 수정 -->
    </select>

    <!-- 조합원 건수 확인 -->
    <select id="selectMembCnt" parameterType="Map" resultType="int">
		SELECT COUNT(1) CNT
		  FROM MB_MASTER
		 WHERE BIZ_NO = REPLACE(#{bizNo}, '-', '')
	</select>

	<!-- 조합원정보 계정정보 아이디 중복확인(모바일 로그인용 아이디) -->
	<select id="selectMembUserId" parameterType="Map" resultType="camelMap">
		/* MembMapper.selectMembUserId */
		SELECT
			MEMB_NO
			, MEMB_NM
			, BIZ_NO
			, USER_ID
			, USER_PW
		  FROM MB_MASTER
		 WHERE USER_ID = #{userId}
	</select>

	<!-- 조합원 담당자 조회 -->
    <select id="selectMembPers" parameterType="Map" resultType="camelMap">
        /* MembMapper.selectMembPers */
        SELECT PERS_SEQ
             , PERS_NM
             , PERS_STAT
             , F_GET_CD_NM('MB10',PERS_STAT) PERS_STAT_NM
             , (PERS_POS || ' / ' || F_GET_CD_NM('MB10',PERS_STAT)) AS PERS_POS_STAT
             , DEPT_NM
             , PERS_POS
             , F_GET_PATTERN(PERS_TEL_NO, 'TEL') PERS_TEL_NO
             , PERS_EXT_NO
             , F_GET_PATTERN(PERS_CELL_NO, 'TEL') PERS_CELL_NO
             , F_GET_PATTERN(PERS_FAX_NO, 'TEL') PERS_FAX_NO
             , PERS_EMAIL
             , SMS_YN
             , EMAIL_YN
             , MEMB_NO
             , REMARK
             , EXPR_YN
          FROM MB_PERSON_VIEW
         WHERE MEMB_NO = #{membNo}
		   AND PERS_SEQ = #{persSeq}
    </select>

</mapper>
