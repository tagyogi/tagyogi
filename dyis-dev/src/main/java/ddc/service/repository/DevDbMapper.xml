<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ddc.service.repository.DevDbMapper">

	<!-- ======================================================================================================================================== -->
	<!-- 데이터베이스 초기설정 처리 -->
	<!-- ======================================================================================================================================== -->
	
	<!-- 테이블 정보 조회 -->
	<select id="selectTblInfo" parameterType="Map" resultType="camelMap">
		/* DevDbMapper.selectTblInfo */
		SELECT *
		  FROM USER_TABLES
		 WHERE TABLE_NAME = #{sTblId}
	</select>
	
	<!-- 데이터베이스 초기 정보 등록 -->
	<insert id="insertDevDbMasInit" parameterType="Map"  >
		/* DevDbMapper.insertDevDbMasInit */
		INSERT INTO DEV_DB_MAS
		(
			TBL_SN, TBL_NM, TBL_CMT, USE_AT
		)
		(
		 SELECT ROWNUM, A.TABLE_NAME, B.COMMENTS, '1'
		   FROM USER_TABLES A
		      , USER_TAB_COMMENTS B
		  WHERE A.TABLE_NAME = B.TABLE_NAME(+)
		)
 	</insert>
 	
 	<!-- 데이터베이스 초기 정보 등록 -->
	<insert id="insertDevDbDtlInit" parameterType="Map"  >
		/* DevDbMapper.insertDevDbDtlInit */
		INSERT INTO DEV_DB_DTL
		( 
			TBL_SN
			, COL_SN
			, COL_NM
			, COL_CMT
			, COL_TYPE
			, COL_LEN
			, COL_PRE
			, PK_AT
			, NULL_AT
			, DEF_VAL
			, RMK
		)
		(
		 SELECT A.TBL_SN, B.COLUMN_ID, B.COLUMN_NAME, C.COMMENTS
		       , B.DATA_TYPE, B.DATA_LENGTH, B.DATA_PRECISION
		       , DECODE(D.COLUMN_NAME, NULL, 'N', 'Y') PK_YN
		       , B.NULLABLE
		       , DBMS_XMLGEN.GETXMLTYPE('SELECT DATA_DEFAULT FROM COLS WHERE TABLE_NAME = '||CHR(39)||B.TABLE_NAME||CHR(39)|| ' AND COLUMN_NAME = ' ||CHR(39)||B.COLUMN_NAME||CHR(39)).EXTRACT('//text()')
               , ''  
		    FROM DEV_DB_MAS A
		       , COLS B
		       , USER_COL_COMMENTS C
		       , (
              SELECT A.TABLE_NAME, B.COLUMN_NAME 
                FROM DBA_CONSTRAINTS A, all_cons_columns B
                WHERE A.CONSTRAINT_TYPE='P' 
                AND A.CONSTRAINT_NAME = B.CONSTRAINT_NAME
               ) D
		   WHERE A.TBL_NM = B.TABLE_NAME
		     AND B.TABLE_NAME = C.TABLE_NAME
		     AND B.COLUMN_NAME = C.COLUMN_NAME
		     AND A.TBL_NM = D.TABLE_NAME(+)
		     AND B.COLUMN_NAME = D.COLUMN_NAME(+)
		     <if test="( tblNm != null and !('').equals( tblNm ))">
		     AND A.TBL_NM = #{tblNm}
			 </if>
		)
		
		
 	</insert>
 	
	
	<!-- ======================================================================================================================================== -->
	<!-- 데이터베이스 상세 처리 영역 DEV_DB_MAS -->
	<!-- ======================================================================================================================================== -->
	
	<!-- 데이터베이스 현황 조회 -->
	<select id="selectDevDbMasList" parameterType="Map" resultType="camelMap">
		/* DevDbMapper.selectDevDbMasList */
		SELECT ROW_NUMBER() OVER(ORDER BY TBL_NM) SEQ
		    , TBL_SN
		    , TBL_NM
			, TBL_CMT
			, DECODE((SELECT COUNT(*) FROM USER_TABLES WHERE TABLE_NAME = TBL_NM), 0, 0, 1) AS TBL_AT /* 테이블 생성 유무*/
			, DECODE((SELECT COUNT(*) FROM USER_TABLES WHERE TABLE_NAME = TBL_NM||'_BAK'), 0, 0, 1) AS TBL_BAK_AT /* 테이블 생성 유무*/
		  FROM DEV_DB_MAS
		<where>
		<if test="( sTblNm != null and !('').equals( sTblNm ))">
	    	AND TBL_CMT LIKE '%'||#{sTblNm}||'%'
		</if>
		</where> 
		ORDER BY TBL_NM, TBL_SN
	</select>
	
	<!-- 데이터베이스 상세 정보 -->
	<select id="selectDevDbMasInfo" parameterType="Map" resultType="camelMap">
		/* DevDbMapper.selectDevDbMasInfo */
		SELECT TBL_SN
		     , TBL_NM
			 , TBL_CMT
			 , USE_AT
		  FROM DEV_DB_MAS
		 WHERE TBL_NM = #{tblNm}
	</select>
	
	
	<!-- 데이터베이스 현황 등록-->
	<insert id="insertDevDbMas" parameterType="Map"  >
		<selectKey keyProperty="keyVal" resultType="int" order="BEFORE">
			/* DevDbMapper.insertDevDbMas selectKey */
			SELECT NVL(MAX(TBL_SN), 0) + 1 FROM DEV_DB_MAS
	    </selectKey>
		/* DevDbMapper.insertDevDbMas */
		INSERT INTO DEV_DB_MAS
		(
			TBL_SN, TBL_NM, TBL_CMT
		)
		VALUES
		(
			#{keyVal}, #{tblNm}, #{tblCmt} 
		)
 	</insert>
 	
 	<!-- 데이터베이스 현황 수정-->
	<update id="updateDevDbMas" parameterType="Map"  >
		/* DevDbMapper.updateDevDbMas */
		UPDATE DEV_DB_MAS
		  SET  TBL_NM 	= #{tblNm}
		  	 , TBL_CMT 	= #{tblCmt}
		 WHERE TBL_SN 	= #{tblSn}
 	</update>
 	
 	<!-- 데이터베이스 MAS 삭제-->
	<delete id="deleteDevDbMas" parameterType="Map"  >
		/* DevDbMapper.deleteDevDbMas */
		DELETE FROM DEV_DB_MAS
		 WHERE TBL_SN	= #{tblSn}
 	</delete>
 	
	<!-- ======================================================================================================================================== -->
	<!-- 데이터베이스 상세 처리 영역 DEV_DB_DTL -->
	<!-- ======================================================================================================================================== -->
	
	<!-- 데이터베이스 상세 현황 조회 -->
	<select id="selectDevDbDtlList" parameterType="Map" resultType="camelMap">
		/* DevDbMapper.selectDevDbDtlList */
		SELECT ROWNUM SEQ
		    , A.TBL_SN
		    , A.COL_SN
			, A.COL_NM
			, A.COL_CMT
			, A.COL_TYPE
			, TO_CHAR(A.COL_LEN) COL_LEN
			, A.COL_PRE
			, A.PK_AT
			, A.NULL_AT
			, CASE WHEN A.COL_TYPE = 'NUMBER' THEN NVL(TRIM(A.DEF_VAL), 0)
			       ELSE NVL(TRIM(A.DEF_VAL), '')
			       END DEF_VAL
			, A.RMK
		  FROM DEV_DB_DTL A
		     , DEV_DB_MAS B
		 WHERE A.TBL_SN = B.TBL_SN
		   AND A.TBL_SN = #{tblSn}
		 ORDER BY A.COL_SN
	</select>
	
	<!-- 데이터베이스 상세 현황 등록-->
	<insert id="insertDevDbDtl" parameterType="Map"  >
		/* DevDbMapper.insertDevDbDtl */
		INSERT INTO DEV_DB_DTL
		( 
			TBL_SN
			, COL_SN
			, COL_NM
			, COL_CMT
			, COL_TYPE
			, COL_LEN
			, COL_PRE
			, PK_AT
			, NULL_AT
			, DEF_VAL
			, RMK
		)
		VALUES
		( 
			#{tblSn}
			, #{colSn}
			, #{colNm} 
			, #{colCmt}
			, #{colType}
			, #{colLen}
			, #{colPre}
			, #{pkAt}
			, #{nullAt}
			, #{defVal}
			, #{rmk}
		)
		
 	</insert>
 	
 	<!-- 데이터베이스 상세 현황 수정-->
	<update id="updateDevDbDtl" parameterType="Map"  >
		/* DevDbMapper.updateDevDbDtl */
		UPDATE DEV_DB_DTL
		   SET COL_NM 	= #{colNm} 
		     , COL_TYPE = #{colType}
		     , COL_LEN = #{colLen}
		     , COL_PRE = #{colPre}
		     , PK_AT 	= #{pkAt}
		     , NULL_AT 	= #{nullAt}
		     , DEF_VAL 	= #{defVal}
		     , RMK 		= #{rmk}
		 WHERE TBL_SN 	= #{tblSn}
		   AND COL_SN   = #{colSn}
 	</update>
 	
 	
 	<!-- 데이터베이스 상세 현황 일괄 삭제-->
	<delete id="deleteDevDbDtlAll" parameterType="Map"  >
		/* DevDbMapper.deleteDevDbDtlAll */
		DELETE FROM DEV_DB_DTL
		 WHERE TBL_SN	= #{tblSn}
 	</delete>

	
	<!-- ======================================================================================================================================== -->
	<!-- 데이터베이스 생성 처리 영역 -->
	<!-- ======================================================================================================================================== -->
	
	<!-- 데이터베이스 생성 이전 필드 정보 조회-->
	<select id="selectBefTblColList" parameterType="Map" resultType="camelMap">
		/* DevDbMapper.selectBefTblColList */
		SELECT COLUMN_NAME
		    , TO_CHAR((SELECT POSITION FROM USER_CONS_COLUMNS WHERE TABLE_NAME = A.TABLE_NAME AND COLUMN_NAME = A.COLUMN_NAME AND POSITION IS NOT NULL)) PK_AT
		  FROM USER_TAB_COLUMNS A
		 WHERE TABLE_NAME = #{tblNm}
		 ORDER BY COLUMN_ID
	</select>
	
	<insert id="createDbsql" parameterType="Map"  >
		/* DevDbMapper.createDbsql */
		${sCreateDbSql}
 	</insert>
 	
 	
 	<!-- 테이블 데이터 추출-->
	<select id="selectTblList" parameterType="Map" resultType="camelMap">
		/* DevDbMapper.selectTblList */
		SELECT *
		  FROM ${tblNm}
	</select>
	
	<!-- 테이블 데이터 등록-->
	<insert id="insertTblProc" parameterType="Map"  >
		/* DevDbMapper.insertTblProc */
		INSERT ALL 
			<foreach item="itemData" index="index" collection="dataList" separator="">
			INTO ${tblNm} VALUES
				(
				<foreach item="itemCols" index="index" collection="colsList" separator=",">
					#{itemData.${itemCols}}
				</foreach>
				)
			</foreach>
		SELECT * FROM DUAL
 	</insert>
    
    
</mapper>